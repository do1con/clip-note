[{"D:\\projects\\clip-note\\src\\index.tsx":"1","D:\\projects\\clip-note\\src\\reportWebVitals.ts":"2","D:\\projects\\clip-note\\src\\App.tsx":"3","D:\\projects\\clip-note\\src\\Layout\\Header.tsx":"4","D:\\projects\\clip-note\\src\\Layout\\Memos.tsx":"5"},{"size":314,"mtime":1615618796756,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1615618800776,"results":"8","hashOfConfig":"7"},{"size":209,"mtime":1615618820247,"results":"9","hashOfConfig":"7"},{"size":993,"mtime":1615618789103,"results":"10","hashOfConfig":"7"},{"size":1606,"mtime":1615619006491,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1dq6p45",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"D:\\projects\\clip-note\\src\\index.tsx",[],["25","26","27","28","29"],"D:\\projects\\clip-note\\src\\reportWebVitals.ts",["30"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","D:\\projects\\clip-note\\src\\App.tsx",[],"D:\\projects\\clip-note\\src\\Layout\\Header.tsx",[],"D:\\projects\\clip-note\\src\\Layout\\Memos.tsx",["31"],"/* global chrome */\r\nimport React, { useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Row, Col, Form } from 'react-bootstrap';\r\n\r\nconst TextBoxWrapper = styled.div`\r\n  margin-top: 5px;\r\n  margin-right: 5px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nfunction Memos(): JSX.Element {\r\n  const resizeTextArea = (textAreaRef: React.RefObject<HTMLTextAreaElement>) => {\r\n    const textAreaRefDom = textAreaRef.current;\r\n    if (textAreaRefDom) {\r\n      textAreaRefDom.style.height = '1px';\r\n      textAreaRefDom.style.height = `${textAreaRefDom.scrollHeight}px`;\r\n    }\r\n  };\r\n\r\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\r\n  chrome.storage.sync.get(['key'], function storageSyncCallback(result) {\r\n    // Chrome Storage Sync get, callback func\r\n    console.log(`Value currently is ${result.key}`);\r\n  });\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col lg=\"auto\">\r\n          <TextBoxWrapper>\r\n            <Form>\r\n              <Form.Group controlId=\"memoTextForm\">\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  placeholder=\"Type here.\"\r\n                  ref={textAreaRef}\r\n                  onKeyDown={() => resizeTextArea(textAreaRef)}\r\n                  onKeyUp={() => resizeTextArea(textAreaRef)}\r\n                  style={{\r\n                    overflow: 'hidden',\r\n                    transition: 'height 200ms',\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </TextBoxWrapper>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Memos;\r\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":3,"column":25,"nodeType":"44","messageId":"45","endLine":3,"endColumn":57},{"ruleId":"46","severity":1,"message":"47","line":24,"column":5,"nodeType":"48","messageId":"49","endLine":24,"endColumn":16},"lines-around-directive",["50"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]