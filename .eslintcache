[{"D:\\projects\\clip-note\\src\\index.tsx":"1","D:\\projects\\clip-note\\src\\reportWebVitals.ts":"2","D:\\projects\\clip-note\\src\\App.tsx":"3","D:\\projects\\clip-note\\src\\Layout\\Header.tsx":"4","D:\\projects\\clip-note\\src\\Layout\\MemoContainer.tsx":"5","D:\\projects\\clip-note\\src\\Component\\Memo.tsx":"6","D:\\projects\\clip-note\\src\\Layout\\Body.tsx":"7","D:\\projects\\clip-note\\src\\Context\\ContextProvider.tsx":"8"},{"size":314,"mtime":1615618796756,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1615618800776,"results":"11","hashOfConfig":"10"},{"size":368,"mtime":1615636964730,"results":"12","hashOfConfig":"10"},{"size":656,"mtime":1615627109580,"results":"13","hashOfConfig":"10"},{"size":1774,"mtime":1615637299070,"results":"14","hashOfConfig":"10"},{"size":575,"mtime":1615626772212,"results":"15","hashOfConfig":"10"},{"size":168,"mtime":1615626955982,"results":"16","hashOfConfig":"10"},{"size":2402,"mtime":1615637286288,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1dq6p45",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\projects\\clip-note\\src\\index.tsx",[],["37","38","39","40","41"],"D:\\projects\\clip-note\\src\\reportWebVitals.ts",["42"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","D:\\projects\\clip-note\\src\\App.tsx",[],"D:\\projects\\clip-note\\src\\Layout\\Header.tsx",[],"D:\\projects\\clip-note\\src\\Layout\\MemoContainer.tsx",["43","44"],"D:\\projects\\clip-note\\src\\Component\\Memo.tsx",["45"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nfunction Memo(): JSX.Element {\r\n  return (\r\n    <Card style={{ margin: '5px', width: 'calc(20% - 10px)' }}>\r\n      <Card.Body>\r\n        <Card.Text>\r\n          테스트용 문서입니다.테스트용 문서입니다.테스트용 문서입니다.테스트용 문서입니다.테스트용 문서입니다.테스트용\r\n          문서입니다.테스트용 문서입니다.\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Memo;\r\n","D:\\projects\\clip-note\\src\\Layout\\Body.tsx",[],"D:\\projects\\clip-note\\src\\Context\\ContextProvider.tsx",["46","47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":3,"column":25,"nodeType":"61","messageId":"62","endLine":3,"endColumn":57},{"ruleId":"63","severity":1,"message":"64","line":1,"column":11,"nodeType":"65","messageId":"66","endLine":1,"endColumn":17},{"ruleId":"67","severity":1,"message":"68","line":23,"column":5,"nodeType":"69","messageId":"70","endLine":23,"endColumn":16},{"ruleId":"63","severity":1,"message":"71","line":2,"column":8,"nodeType":"72","messageId":"66","endLine":2,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":48,"column":48,"nodeType":"75","messageId":"76","endLine":48,"endColumn":51,"suggestions":"77"},{"ruleId":"63","severity":1,"message":"78","line":59,"column":10,"nodeType":"72","messageId":"66","endLine":59,"endColumn":15},{"ruleId":"63","severity":1,"message":"79","line":59,"column":17,"nodeType":"72","messageId":"66","endLine":59,"endColumn":32},"lines-around-directive",["80"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'chrome' is defined but never used.","Program","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected","'styled' is defined but never used.","Identifier","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["81","82"],"'state' is assigned a value but never used.","'contextDispatch' is assigned a value but never used.","padding-line-between-statements",{"messageId":"83","fix":"84","desc":"85"},{"messageId":"86","fix":"87","desc":"88"},"suggestUnknown",{"range":"89","text":"90"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"89","text":"91"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[1202,1205],"unknown","never"]